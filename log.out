2019-08-22 12:19:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:19:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:19:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:19:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:19:04 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:19:04 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:19:04 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:19:04 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:19:04 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:19:04 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:19:04 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:19:04 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:19:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:19:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:19:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:19:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:19:05 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:19:05 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:19:05 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:19:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:19:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ea2d70]
2019-08-22 12:19:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:19:05 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:19:05 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:19:05 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:19:05 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:19:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:19:05 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:19:05 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:19:05 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:19:05 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:19:05 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:19:05 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:19:05 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:19:05 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:19:05 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:19:05 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:19:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:19:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:19:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:19:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:19:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:19:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:19:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:19:05 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:19:05 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:19:05 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:19:05 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:19:05 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:19:05 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:19:05 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:19:05 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:19:05 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:19:05 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:19:05 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:19:05 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:19:05 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:19:05 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:19:05 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:19:05 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:19:05 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:19:05 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:19:05 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:19:05 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:19:05 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:19:05 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:19:05 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:19:05 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:19:05 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:19:05 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:19:05 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:19:05 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:19:05 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:19:05 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:19:05 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:19:05 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:19:05 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:19:05 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:19:05 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:19:05 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:19:05 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:19:05 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:19:05 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:19:05 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:19:05 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@76c387f9, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3874b815, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5d7835a8, java.class.version=55.0}
2019-08-22 12:19:05 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:19:05 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:19:05 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ac45389]
2019-08-22 12:19:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:19:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:19:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:19:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:19:05 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:19:05 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:19:05 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:19:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:19:05 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:19:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:19:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a60674]
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:19:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:19:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:19:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:19:05 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:19:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a7a60c]
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:19:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:19:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:19:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:19:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:19:05 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:19:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:19:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:19:05 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:19:05 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:19:05 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:19:05 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:19:05 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:19:05 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:19:05 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:19:05 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b63e6ad
2019-08-22 12:19:05 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cc092d2b-ae4f-4151-9fc3-536c56db17ab (<unnamed>)
2019-08-22 12:19:05 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:19:05 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 12:19:05 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3069a360
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 12:19:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 12:19:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:19:05 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 12:19:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:19:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 12:19:05 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:19:05 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:19:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 12:19:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 12:19:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:05 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 12:19:05 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:19:05 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:19:05 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:19:05 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:19:05 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:19:05 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:19:05 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:19:05 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:19:05 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:19:05 INFO  App:25 - Event [id=2, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 12:19:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 12:19:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:19:05 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:19:05 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:19:06 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@732f29af
2019-08-22 12:19:06 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:19:06 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 12:19:06 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:19:06 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@732f29af}

2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 12:19:06 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:19:06 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:19:06 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:19:06 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:19:06 INFO  App:33 - Event [id=2, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:19:06 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:19:06 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:19:06 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@732f29af
2019-08-22 12:19:06 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:19:06 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 12:19:06 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:19:06 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@732f29af}

2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 12:19:06 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:19:06 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:19:06 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:19:06 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:19:06 INFO  App:41 - Event [id=2, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:19:06 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:19:06 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:19:06 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:19:06 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:19:06 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 12:19:06 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:19:06 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:19:06 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@178213b}

2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 12:19:06 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 12:19:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:19:06 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 12:19:06 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:19:06 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:19:06 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:19:06 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:25:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:25:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:25:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:25:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:25:03 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:25:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:25:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:25:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:25:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:25:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:25:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:25:03 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:25:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:25:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:25:03 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:25:03 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:25:03 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:25:03 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:25:03 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:25:03 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:25:04 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:25:04 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ea2d70]
2019-08-22 12:25:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:25:04 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:25:04 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:25:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:25:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:25:04 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:25:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:25:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:25:04 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:25:04 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:25:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:25:04 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:25:04 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:25:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:25:04 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:25:04 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:25:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:25:04 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:25:04 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:25:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:25:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:25:04 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:25:04 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:25:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:25:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:25:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:25:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:25:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:25:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:25:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:25:04 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:25:04 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:25:04 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:25:04 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:25:04 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:25:04 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:25:04 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:25:04 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:25:04 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:25:04 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:25:04 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:25:04 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:25:04 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:25:04 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:25:04 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:25:04 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:25:04 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:25:04 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:25:04 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:25:04 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:25:04 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:25:04 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:25:04 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:25:04 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:25:04 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:25:04 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:25:04 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:25:04 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:25:04 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:25:04 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:25:04 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:25:04 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:25:04 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:25:04 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:25:04 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:25:04 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:25:04 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:25:04 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:25:04 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:25:04 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:25:04 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@43a51d00, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e23c180, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@499683c4, java.class.version=55.0}
2019-08-22 12:25:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:25:04 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:25:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9d7ccfe]
2019-08-22 12:25:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:25:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:25:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:25:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:25:04 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:25:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b48e183]
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:25:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:25:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:25:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:25:04 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad1caa2]
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:25:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:25:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:25:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:25:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:25:04 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:04 DEBUG SQL:94 - create table Event (id integer not null auto_increment, city varchar(255), eveName varchar(255), eveType varchar(255), price integer not null, tickets integer not null, primary key (id)) engine=MyISAM
2019-08-22 12:25:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:25:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:25:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:25:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:25:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:25:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:25:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5562c2c9
2019-08-22 12:25:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6f3bd3ca-ae6f-4504-80a2-4d28cd720cdb (<unnamed>)
2019-08-22 12:25:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:25:49 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:25:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:25:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:25:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:25:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:25:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:25:49 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:25:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:25:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:25:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:25:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:25:49 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:25:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:25:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:25:50 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:25:50 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:25:50 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:25:50 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:25:50 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:25:50 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:25:50 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:25:50 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@695a69a1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b1abd11]
2019-08-22 12:25:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:25:50 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:25:50 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:25:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:25:50 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:25:50 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:25:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:25:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:25:50 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:25:50 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:25:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:25:50 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:25:50 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:25:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:25:50 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:25:50 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:25:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:25:50 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:25:50 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:25:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:25:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:25:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:25:50 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:25:50 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:25:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:25:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:25:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:25:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:25:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:25:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:25:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:25:50 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:25:50 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:25:50 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:25:50 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:25:50 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:25:50 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:25:50 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:25:50 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:25:50 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:25:50 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:25:50 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:25:50 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:25:50 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:25:50 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:25:50 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:25:50 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:25:50 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:25:50 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:25:50 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:25:50 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:25:50 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:25:50 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:25:50 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:25:50 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:25:50 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:25:50 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:25:50 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:25:50 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:25:50 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:25:50 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:25:50 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:25:50 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:25:50 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:25:50 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:25:50 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:25:50 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:25:50 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:25:50 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:25:50 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:25:50 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:25:50 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7e736350, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36b310aa, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@76c387f9, java.class.version=55.0}
2019-08-22 12:25:50 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:25:50 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:25:50 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@695a69a1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1bf39d06]
2019-08-22 12:25:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:25:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:25:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:25:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:25:50 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:25:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a34af]
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:25:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:25:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:25:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:25:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285c6918]
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:25:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:25:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:25:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:25:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:25:50 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:25:50 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:25:50 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:25:50 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:25:50 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:25:50 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:25:50 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:25:50 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:25:50 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@257ef9ed
2019-08-22 12:25:50 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 000e4aac-9822-4850-a8ff-498598aefbce (<unnamed>)
2019-08-22 12:25:50 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:25:50 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 12:25:50 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 12:25:50 DEBUG TransactionImpl:84 - begin
2019-08-22 12:25:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2019-08-22 12:25:50 DEBUG SQL:94 - insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:25:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2019-08-22 12:25:50 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2019-08-22 12:25:50 DEBUG TransactionImpl:101 - committing
2019-08-22 12:25:50 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2019-08-22 12:25:50 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2019-08-22 12:25:50 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2019-08-22 12:25:50 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-08-22 12:25:51 DEBUG EntityPrinter:110 - Listing entities:
2019-08-22 12:25:51 DEBUG EntityPrinter:117 - com.example.model.Event{tickets=100, city=kolkata, eveType=sports, price=500, eveName=cricket, id=1}
2019-08-22 12:26:17 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:26:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:26:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:26:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:26:17 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:26:17 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:26:18 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:26:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:26:18 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:26:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:26:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:26:18 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:26:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:26:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:26:18 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:26:18 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:26:18 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:26:18 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:26:18 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:26:18 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:26:18 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:26:18 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ea2d70]
2019-08-22 12:26:18 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:26:18 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:26:18 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:26:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:26:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:26:18 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:26:18 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:26:18 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:26:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:26:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:26:18 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:26:18 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:26:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:26:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:26:18 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:26:18 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:26:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:26:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:26:18 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:26:18 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:26:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:26:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:26:18 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:26:18 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:26:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:26:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:26:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:26:18 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:26:18 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:26:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:26:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:26:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:26:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:26:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:26:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:26:18 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:26:18 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:26:18 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:26:18 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:26:18 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:26:18 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:26:18 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:26:18 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:26:18 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:26:18 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:26:18 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:26:18 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:26:18 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:26:18 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:26:18 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:26:18 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:26:18 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:26:18 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:26:18 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:26:18 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:26:18 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:26:18 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:26:18 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:26:18 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:26:18 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:26:18 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:26:18 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:26:18 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:26:18 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:26:18 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:26:18 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:26:18 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:26:18 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:26:18 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:26:18 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:26:18 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:26:18 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:26:18 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:26:18 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:26:18 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:26:18 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:26:18 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@43a51d00, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e23c180, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@499683c4, java.class.version=55.0}
2019-08-22 12:26:18 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:26:18 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:26:18 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9d7ccfe]
2019-08-22 12:26:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:26:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:26:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:26:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:26:18 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:26:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b48e183]
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:26:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:26:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:26:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:26:18 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:26:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad1caa2]
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:26:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:26:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:26:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:26:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:26:18 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:26:18 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:26:18 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:26:19 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:26:19 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:26:19 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:26:19 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:26:19 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:26:19 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:26:19 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:26:19 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@127705e4
2019-08-22 12:26:19 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: be219781-6146-4cdc-a6a6-f33a8fdbcf0e (<unnamed>)
2019-08-22 12:26:19 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:26:19 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 12:26:19 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 12:26:19 DEBUG TransactionImpl:84 - begin
2019-08-22 12:26:19 DEBUG ActionQueue:281 - Executing identity-insert immediately
2019-08-22 12:26:19 DEBUG SQL:94 - insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:26:19 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2019-08-22 12:26:19 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2019-08-22 12:26:19 DEBUG TransactionImpl:101 - committing
2019-08-22 12:26:19 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2019-08-22 12:26:19 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2019-08-22 12:26:19 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2019-08-22 12:26:19 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-08-22 12:26:19 DEBUG EntityPrinter:110 - Listing entities:
2019-08-22 12:26:19 DEBUG EntityPrinter:117 - com.example.model.Event{tickets=100, city=kolkata, eveType=sports, price=500, eveName=football, id=2}
2019-08-22 12:27:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:27:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:27:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:27:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:27:13 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:27:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:27:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:27:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:27:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:27:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:27:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:27:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:27:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:27:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:27:13 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:27:13 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:27:13 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:27:13 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:27:13 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:27:13 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:27:13 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:27:13 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ea2d70]
2019-08-22 12:27:13 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:27:13 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:27:13 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:27:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:27:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:27:13 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:27:13 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:27:13 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:27:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:27:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:27:13 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:27:13 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:27:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:27:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:27:13 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:27:13 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:27:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:27:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:27:13 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:27:13 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:27:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:27:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:27:13 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:27:13 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:27:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:27:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:27:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:27:13 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:27:13 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:27:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:27:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:27:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:27:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:27:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:27:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:27:13 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:27:13 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:27:13 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:27:13 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:27:13 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:27:13 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:27:13 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:27:13 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:27:13 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:27:13 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:27:13 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:27:13 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:27:13 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:27:13 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:27:13 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:27:13 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:27:13 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:27:13 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:27:13 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:27:13 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:27:13 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:27:13 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:27:13 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:27:13 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:27:13 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:27:13 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:27:13 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:27:13 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:27:13 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:27:13 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:27:13 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:27:13 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:27:13 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:27:13 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:27:13 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:27:13 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:27:13 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:27:13 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:27:13 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:27:13 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:27:13 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:27:13 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@43a51d00, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e23c180, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@499683c4, java.class.version=55.0}
2019-08-22 12:27:13 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:27:13 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:27:13 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9d7ccfe]
2019-08-22 12:27:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:27:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:27:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:27:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:27:14 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:27:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b48e183]
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:27:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:27:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:27:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:27:14 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:27:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad1caa2]
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:27:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:27:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:27:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:27:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:27:14 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:27:14 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:27:14 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:27:14 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:27:14 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:27:14 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:27:14 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:27:14 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:27:14 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:27:14 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:27:14 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@127705e4
2019-08-22 12:27:14 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: bf9015ee-9ef3-40bd-8110-9e5f85fce6f2 (<unnamed>)
2019-08-22 12:27:14 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:27:14 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 12:27:14 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 12:27:14 DEBUG TransactionImpl:84 - begin
2019-08-22 12:27:14 DEBUG ActionQueue:281 - Executing identity-insert immediately
2019-08-22 12:27:14 DEBUG SQL:94 - insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:27:14 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2019-08-22 12:27:14 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2019-08-22 12:27:14 DEBUG TransactionImpl:101 - committing
2019-08-22 12:27:14 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2019-08-22 12:27:14 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2019-08-22 12:27:14 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2019-08-22 12:27:14 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2019-08-22 12:27:14 DEBUG EntityPrinter:110 - Listing entities:
2019-08-22 12:27:14 DEBUG EntityPrinter:117 - com.example.model.Event{tickets=100, city=bangalore, eveType=movie, price=500, eveName=abcd, id=3}
2019-08-22 12:52:32 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:52:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:52:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:52:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:52:32 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:52:32 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:52:32 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:52:32 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:52:32 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:52:32 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:52:32 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:52:32 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:52:32 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:52:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:52:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:52:33 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:52:33 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:52:33 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:52:33 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:52:33 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:52:33 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:52:33 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:52:33 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ea2d70]
2019-08-22 12:52:33 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:52:33 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:52:33 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:52:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:52:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:52:33 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:52:33 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:52:33 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:52:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:52:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:52:33 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:52:33 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:52:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:52:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:52:33 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:52:33 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:52:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:52:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:52:33 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:52:33 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:52:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:52:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:52:33 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:52:33 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:52:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:52:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:52:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:52:33 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:52:33 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:52:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:52:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:52:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:52:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:52:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:52:33 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:52:33 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:52:33 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:52:33 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:52:33 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:52:33 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:52:33 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:52:33 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:52:33 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:52:33 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:52:33 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:52:33 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:52:33 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:52:33 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:52:33 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:52:33 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:52:33 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:52:33 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:52:33 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:52:33 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:52:33 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:52:33 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:52:33 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:52:33 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:52:33 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:52:33 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:52:33 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:52:33 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:52:33 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:52:33 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:52:33 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:52:33 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:52:33 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:52:33 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:52:33 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:52:33 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:52:33 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:52:33 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:52:33 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:52:33 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:52:33 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:52:33 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:52:33 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@43a51d00, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e23c180, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@499683c4, java.class.version=55.0}
2019-08-22 12:52:33 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:52:33 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:52:33 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9d7ccfe]
2019-08-22 12:52:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:52:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:52:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:52:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:52:33 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:52:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b48e183]
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:52:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:52:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:52:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:52:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:52:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad1caa2]
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:52:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:52:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:52:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:52:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:52:33 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:52:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:52:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:52:33 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:52:33 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:52:33 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:52:33 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:52:33 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:52:33 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:52:33 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:52:33 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@127705e4
2019-08-22 12:52:33 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cac19cb5-dd40-4886-8170-b8301f703d9a (<unnamed>)
2019-08-22 12:52:33 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:52:33 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2019-08-22 12:52:33 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4baed682] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9d7ccfe]
2019-08-22 12:52:33 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2019-08-22 12:52:33 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2019-08-22 12:54:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:54:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:54:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:54:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:54:50 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:54:50 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:54:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:54:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:54:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:54:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:54:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:54:51 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f36662c
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1817f1eb
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@373ebf74
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a9d6f02
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@241e8ea6
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3016fd5e
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59f63e24
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72c28d64
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51972dc7
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c62d71
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dd80673
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b45dcb8
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@732f29af
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@732f29af
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb172e
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1fa5b1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fce136b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3300f4fd
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b2a01d4
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4983159f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bc345
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a43ce46
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53f0a4cb
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60957c0f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53142455
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cdd09b1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5829e4f4
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61ce23ac
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f6f61c8
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d645b1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d9f6567
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e276594
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@555cf22
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e22bdd
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e84a8e1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e01a982
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@704f1591
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5e8ac0e1
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b7906b3
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@68fa0ba8
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5c10f1c3
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a0d172f
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1755e85b
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@63fdab07
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@14dda234
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38f116f6
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c25e6c4
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e70a728
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fe7c640
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73dce0e6
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53dacd14
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7096b474
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463b4ac8
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13f17eb4
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 12:54:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:54:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:54:51 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:54:51 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:54:51 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:54:51 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:54:51 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:54:51 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:54:51 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:54:51 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55ea2d70]
2019-08-22 12:54:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:54:51 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:54:51 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:54:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:54:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:54:51 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:54:51 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:54:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:54:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:54:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:54:51 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:54:51 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:54:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:54:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:54:51 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:54:51 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:54:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:54:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:54:51 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:54:51 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:54:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:54:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:54:51 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:54:51 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:54:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:54:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:54:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:54:51 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:54:51 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:54:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:54:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:54:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:54:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:54:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:54:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:54:51 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:54:51 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:54:51 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:54:51 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:54:51 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:54:51 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:54:51 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:54:51 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:54:51 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:54:51 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:54:51 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:54:51 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:54:51 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:54:51 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:54:51 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:54:51 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:54:51 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:54:51 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:54:51 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:54:51 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:54:51 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:54:51 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:54:51 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:54:51 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:54:51 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:54:51 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:54:51 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:54:51 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:54:51 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:54:51 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:54:51 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:54:51 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:54:51 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:54:51 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:54:51 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:54:51 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:54:51 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:54:51 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:54:51 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:54:51 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:54:51 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:54:51 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@43a51d00, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e23c180, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@499683c4, java.class.version=55.0}
2019-08-22 12:54:51 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:54:51 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:54:51 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad6fa53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9d7ccfe]
2019-08-22 12:54:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:54:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:54:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:54:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:54:51 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:54:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b48e183]
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:54:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:54:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:54:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:54:51 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:54:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad1caa2]
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:54:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:54:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:54:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:54:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:54:51 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:54:51 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:54:51 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:54:52 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:54:52 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:54:52 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:54:52 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:54:52 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:54:52 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:54:52 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:54:52 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@127705e4
2019-08-22 12:54:52 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 46a08768-ae14-4fde-836f-62e143793d54 (<unnamed>)
2019-08-22 12:54:52 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:54:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 12:54:52 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@65cf4d6d
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:54:52 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:54:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 12:54:52 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:54:52 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 2
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 12:54:52 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:54:52 INFO  App:25 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:54:52 INFO  App:25 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:54:52 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:54:52 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:54:52 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@732f29af
2019-08-22 12:54:52 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:54:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 12:54:52 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:54:52 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@732f29af}

2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:54:52 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:54:52 INFO  App:33 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:54:52 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:54:52 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:54:52 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@732f29af
2019-08-22 12:54:52 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:54:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 12:54:52 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:54:52 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@732f29af}

2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:54:52 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:54:52 INFO  App:41 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:54:52 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:54:52 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:54:52 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@178213b
2019-08-22 12:54:52 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:54:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 12:54:52 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:54:52 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:54:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@178213b}

2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 12:54:52 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 12:54:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:54:52 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 12:54:52 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:54:52 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:54:52 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:54:52 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 12:56:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 12:56:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 12:56:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 12:56:57 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 12:56:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 12:56:57 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 12:56:57 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 12:56:57 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 12:56:57 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 12:56:57 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 12:56:57 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@71454b9d
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@71454b9d
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71454b9d
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@39fcbef6
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6399551e
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74c79fa2
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3ed242a4
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3ed242a4
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3ed242a4
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@13f95696
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@13f95696
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f95696
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@906d29b
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@906d29b
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@906d29b
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@57abad67
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@57abad67
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57abad67
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2dca0d64
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2dca0d64
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2dca0d64
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1cdc4c27
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1cdc4c27
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1cdc4c27
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@628c4ac0
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@628c4ac0
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@628c4ac0
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62e20a76
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62e20a76
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@75cd8043
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@75cd8043
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@232a7d73
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@42721fe
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@28e8dde3
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28e8dde3
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@17a1e4ca
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17a1e4ca
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@189aa67a
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@189aa67a
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@31d0e481
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@31d0e481
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bcbb589
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bcbb589
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5aac4250
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5aac4250
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67c2e933
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67c2e933
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ebf0f36
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ebf0f36
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f6722d3
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f6722d3
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@65045a87
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65045a87
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@57ea113a
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57ea113a
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@50ecde95
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50ecde95
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50ecde95
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@732f29af
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5e1fa5b1
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e1fa5b1
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e1fa5b1
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71cf1b07
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@12bd8a64
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12bd8a64
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3a393455
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a393455
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8692d67
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8692d67
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@44e3a2b2
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44e3a2b2
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42f8285e
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42f8285e
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6b53bcc2
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4d722ac9
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d722ac9
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4d722ac9
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e5d9a50
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e5d9a50
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e5d9a50
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@784c3487
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@60975100
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@302a07d
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@302a07d
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@302a07d
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4cf8b2dc
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4cf8b2dc
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4cf8b2dc
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@4bff64c2
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@3cc41abc
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@ec2cc4
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ec2cc4
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52d645b1
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@55562aa9
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55562aa9
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@6bb2d00b
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6bb2d00b
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c5474f5
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@544820b7
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@522a32b1
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@18b0930f
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@18b0930f
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@256f8274
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68044f4
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52d239ba
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@315f43d5
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@68fa0ba8
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c5945a7
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f05be7f
2019-08-22 12:56:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@640f11a1
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 12:56:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 12:56:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 12:56:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 12:56:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 12:56:58 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 12:56:58 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 12:56:58 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 12:56:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 12:56:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bc12da] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3122b117]
2019-08-22 12:56:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 12:56:58 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 12:56:58 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 12:56:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 12:56:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 12:56:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 12:56:58 DEBUG PropertyBinder:266 - Building property id
2019-08-22 12:56:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 12:56:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 12:56:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 12:56:58 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 12:56:58 DEBUG PropertyBinder:266 - Building property city
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 12:56:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 12:56:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 12:56:58 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 12:56:58 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 12:56:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 12:56:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 12:56:58 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 12:56:58 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 12:56:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 12:56:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 12:56:58 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 12:56:58 DEBUG PropertyBinder:266 - Building property price
2019-08-22 12:56:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 12:56:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 12:56:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 12:56:58 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 12:56:58 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 12:56:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 12:56:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 12:56:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 12:56:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 12:56:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 12:56:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 12:56:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 12:56:58 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 12:56:58 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 12:56:58 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 12:56:58 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 12:56:58 DEBUG Settings:74 - Statistics: disabled
2019-08-22 12:56:58 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 12:56:58 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 12:56:58 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 12:56:58 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 12:56:58 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 12:56:58 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 12:56:58 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 12:56:58 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 12:56:58 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 12:56:58 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 12:56:58 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 12:56:58 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 12:56:58 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 12:56:58 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 12:56:58 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 12:56:58 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 12:56:58 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 12:56:58 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 12:56:58 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 12:56:58 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 12:56:58 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 12:56:58 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 12:56:58 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 12:56:58 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 12:56:58 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 12:56:58 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 12:56:58 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 12:56:58 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 12:56:58 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 12:56:58 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 12:56:58 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 12:56:58 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 12:56:58 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 12:56:58 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 12:56:58 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 12:56:58 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7c6189d5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4248e66b, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3e6534e7, java.class.version=55.0}
2019-08-22 12:56:58 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 12:56:58 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 12:56:58 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bc12da] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@23b3aa8c]
2019-08-22 12:56:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:56:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:56:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 12:56:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 12:56:58 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 12:56:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7601bc96]
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:56:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:56:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:56:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:56:58 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:56:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2abe9173]
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 12:56:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 12:56:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 12:56:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 12:56:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 12:56:58 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:56:58 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:56:58 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 12:56:58 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 12:56:58 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 12:56:58 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 12:56:58 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:56:58 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 12:56:58 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 12:56:58 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 12:56:58 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73ae0257
2019-08-22 12:56:58 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 128645a2-6161-43ea-bb27-298837399b24 (<unnamed>)
2019-08-22 12:56:58 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 12:56:58 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 12:56:58 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2577a95d
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:56:58 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:56:58 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 12:56:58 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:56:58 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 2
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 12:56:58 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:58 INFO  App:25 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:58 INFO  App:25 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:56:58 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:56:58 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:56:58 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@305a0c5f
2019-08-22 12:56:58 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:56:58 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 12:56:58 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:56:58 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@305a0c5f}

2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:56:58 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:58 INFO  App:33 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:56:58 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:56:58 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:56:58 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@305a0c5f
2019-08-22 12:56:58 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:56:58 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 12:56:58 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:56:58 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@305a0c5f}

2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG Loader:384 - Result set row: 1
2019-08-22 12:56:58 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 12:56:58 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 12:56:58 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:58 INFO  App:41 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 12:56:58 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 12:56:58 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 12:56:58 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@57abad67
2019-08-22 12:56:58 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 12:56:58 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 12:56:58 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 12:56:58 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 12:56:58 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@57abad67}

2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 12:56:58 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 12:56:58 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 12:56:58 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 12:56:59 DEBUG Loader:384 - Result set row: 0
2019-08-22 12:56:59 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 12:56:59 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 12:56:59 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 12:56:59 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:01:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:01:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:01:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:01:03 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:01:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:01:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:01:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:01:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:01:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:01:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:01:03 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@767e20cf
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f9678e1
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@362045c0
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4af0df05
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4af0df05
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7216fb24
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7216fb24
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@64ba3208
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b00f608
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4aa83f4f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4aa83f4f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@ebb6851
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ebb6851
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@8692d67
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8692d67
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44e3a2b2
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44e3a2b2
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@42f8285e
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@42f8285e
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@340da44c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@340da44c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77a7cf58
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77a7cf58
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@293a5f75
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@293a5f75
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40dff0b7
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40dff0b7
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@8c11eee
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8c11eee
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@4218500f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4218500f
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c2cc639
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c055c54
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3401a114
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3401a114
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6bb2d00b
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6bb2d00b
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd418e4
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd418e4
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2e554a3b
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e554a3b
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ddea849
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ddea849
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58fb7731
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6c5945a7
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7ac2e39b
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7b5a12ae
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@3f390d63
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5286c33a
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5286c33a
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@85e6769
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@b7838a9
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b7838a9
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4c4748bf
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c4748bf
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a85c92
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14d14731
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e14c16d
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@765f05af
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@765f05af
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 13:01:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bff34c6
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:01:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:01:03 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:01:03 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:01:03 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:01:03 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:01:03 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:01:03 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:01:03 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:01:03 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f36b447] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6443b128]
2019-08-22 13:01:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:01:04 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:01:04 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:01:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:01:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:01:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:01:04 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:01:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:01:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:01:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:01:04 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:01:04 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:01:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:01:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:01:04 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:01:04 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:01:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:01:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:01:04 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:01:04 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:01:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:01:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:01:04 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:01:04 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:01:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:01:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:01:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:01:04 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:01:04 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:01:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:01:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:01:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:01:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:01:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:01:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:01:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:01:04 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:01:04 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:01:04 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:01:04 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:01:04 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:01:04 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:01:04 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:01:04 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:01:04 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:01:04 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:01:04 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:01:04 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:01:04 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:01:04 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:01:04 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:01:04 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:01:04 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:01:04 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:01:04 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:01:04 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:01:04 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:01:04 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:01:04 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:01:04 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:01:04 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:01:04 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:01:04 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:01:04 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:01:04 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:01:04 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:01:04 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:01:04 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:01:04 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:01:04 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:01:04 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:01:04 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:01:04 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:01:04 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:01:04 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:01:04 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:01:04 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@76c387f9, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3874b815, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@5d7835a8, java.class.version=55.0}
2019-08-22 13:01:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:01:04 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:01:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f36b447] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ac45389]
2019-08-22 13:01:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:01:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:01:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:01:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:01:04 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:01:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c5228e7]
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:01:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:01:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:01:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:01:04 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:01:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c601d50]
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:01:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:01:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:01:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:01:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:01:04 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:01:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:01:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:01:04 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:01:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:01:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:01:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:01:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:01:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:01:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:01:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@46f902e0
2019-08-22 13:01:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e315fdea-17bc-4ef9-8d1d-b28b84d21d0c (<unnamed>)
2019-08-22 13:01:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:01:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:01:04 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2ead6ba4
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:01:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:01:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 13:01:04 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:01:04 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 2
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 13:01:04 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:04 INFO  App:25 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:04 INFO  App:25 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:01:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:01:04 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:01:04 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:01:04 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:01:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 13:01:04 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:01:04 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@d3957fe}

2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:01:04 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:04 INFO  App:33 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:01:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:01:04 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:01:04 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:01:04 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:01:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 13:01:04 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:01:04 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@d3957fe}

2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:01:04 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:04 INFO  App:41 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:01:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:01:04 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:01:04 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:01:04 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:01:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:01:04 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:01:04 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:01:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@7103cb56}

2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:01:04 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:01:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:01:04 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:01:04 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:01:04 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:01:04 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:01:04 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:46 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:05:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:05:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:05:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:05:46 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:05:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:05:46 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:05:46 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:05:46 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:05:46 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:05:46 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:05:46 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@767e20cf
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f9678e1
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@362045c0
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4af0df05
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4af0df05
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7216fb24
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7216fb24
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@64ba3208
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b00f608
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4aa83f4f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4aa83f4f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@ebb6851
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ebb6851
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@8692d67
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8692d67
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44e3a2b2
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44e3a2b2
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@42f8285e
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@42f8285e
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@340da44c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@340da44c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77a7cf58
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77a7cf58
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@293a5f75
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@293a5f75
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40dff0b7
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40dff0b7
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@8c11eee
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8c11eee
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@4218500f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4218500f
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c2cc639
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c055c54
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3401a114
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3401a114
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6bb2d00b
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6bb2d00b
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd418e4
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd418e4
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2e554a3b
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e554a3b
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ddea849
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ddea849
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58fb7731
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6c5945a7
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7ac2e39b
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7b5a12ae
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@3f390d63
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5286c33a
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5286c33a
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@85e6769
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@b7838a9
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b7838a9
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4c4748bf
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c4748bf
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a85c92
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14d14731
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e14c16d
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@765f05af
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@765f05af
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 13:05:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bff34c6
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:05:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:05:47 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:05:47 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:05:47 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:05:47 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:05:47 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:05:47 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:05:47 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:05:47 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55ea2d70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e742e4]
2019-08-22 13:05:47 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:05:47 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:05:47 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:05:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:05:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:05:47 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:05:47 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:05:47 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:05:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:05:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:05:47 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:05:47 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:05:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:05:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:05:47 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:05:47 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:05:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:05:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:05:47 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:05:47 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:05:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:05:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:05:47 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:05:47 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:05:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:05:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:05:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:05:47 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:05:47 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:05:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:05:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:05:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:05:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:05:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:05:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:05:47 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:05:47 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:05:47 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:05:47 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:05:47 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:05:47 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:05:47 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:05:47 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:05:47 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:05:47 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:05:47 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:05:47 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:05:47 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:05:47 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:05:47 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:05:47 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:05:47 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:05:47 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:05:47 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:05:47 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:05:47 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:05:47 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:05:47 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:05:47 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:05:47 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:05:47 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:05:47 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:05:47 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:05:47 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:05:47 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:05:47 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:05:47 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:05:47 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:05:47 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:05:47 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:05:47 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:05:47 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:05:47 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:05:47 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:05:47 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:05:47 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:05:47 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2e23c180, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@499683c4, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@25da615a, java.class.version=55.0}
2019-08-22 13:05:47 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:05:47 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:05:47 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55ea2d70] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@670ce331]
2019-08-22 13:05:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:05:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:05:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:05:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:05:47 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:05:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514de325]
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:05:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:05:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:05:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:05:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:05:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b6b3572]
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:05:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:05:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:05:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:05:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:05:47 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:05:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:05:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:05:47 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:05:47 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:05:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:05:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:05:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:05:47 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:05:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:05:47 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5562c2c9
2019-08-22 13:05:47 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cdf69602-9212-4eb2-8a4b-69cd57180afc (<unnamed>)
2019-08-22 13:05:47 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:05:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:05:47 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@10272bbb
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:05:47 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:05:47 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 13:05:47 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:05:47 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 2
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 13:05:47 INFO  App:27 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:47 INFO  App:27 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:47 INFO  App:27 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:05:47 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:05:47 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:05:47 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:05:47 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:05:47 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 13:05:47 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:05:47 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@d3957fe}

2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:05:47 INFO  App:35 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:47 INFO  App:35 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:05:47 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:05:47 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:05:47 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:05:47 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:05:47 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 13:05:47 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:05:47 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@d3957fe}

2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:05:47 INFO  App:43 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:47 INFO  App:43 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:05:47 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:05:47 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:05:47 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:05:47 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:05:47 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:05:47 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:05:47 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:05:47 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@7103cb56}

2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:05:47 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:05:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:05:47 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:05:47 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:05:47 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:05:47 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:05:47 INFO  App:51 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:06:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:06:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:06:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:06:56 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:06:56 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:06:56 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:06:56 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:06:56 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:06:56 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:06:56 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:06:56 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@28e8dde3
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@767e20cf
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f9678e1
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@362045c0
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@542e560f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35d08e6c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61f05988
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6492fab5
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3700ec9c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65045a87
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4af0df05
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4af0df05
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7216fb24
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7216fb24
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@64ba3208
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b00f608
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4aa83f4f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4aa83f4f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@ebb6851
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ebb6851
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@8692d67
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8692d67
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44e3a2b2
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44e3a2b2
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@42f8285e
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@42f8285e
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@340da44c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@340da44c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77a7cf58
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77a7cf58
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@293a5f75
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@293a5f75
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40dff0b7
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40dff0b7
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@8c11eee
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8c11eee
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@4218500f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4218500f
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3668d4
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c2cc639
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2101b44a
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c055c54
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3401a114
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3401a114
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6bb2d00b
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6bb2d00b
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd418e4
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd418e4
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2e554a3b
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e554a3b
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ddea849
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ddea849
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58fb7731
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@aafcffa
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a1dd365
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6c5945a7
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7ac2e39b
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@68ad99fe
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@736d6a5c
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7b5a12ae
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@3f390d63
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5286c33a
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5286c33a
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@85e6769
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@b7838a9
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b7838a9
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4c4748bf
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c4748bf
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a85c92
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14d14731
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e14c16d
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@765f05af
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@765f05af
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d0d6318
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bc28c33
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4409e975
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c153b9e
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a7686a7
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@758a34ce
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ec3394b
2019-08-22 13:06:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bff34c6
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:06:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:06:56 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:06:56 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:06:56 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:06:56 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:06:56 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:06:56 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:06:57 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:06:57 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55ea2d70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e742e4]
2019-08-22 13:06:57 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:06:57 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:06:57 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:06:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:06:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:06:57 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:06:57 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:06:57 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:06:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:06:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:06:57 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:06:57 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:06:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:06:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:06:57 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:06:57 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:06:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:06:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:06:57 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:06:57 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:06:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:06:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:06:57 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:06:57 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:06:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:06:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:06:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:06:57 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:06:57 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:06:57 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:06:57 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:06:57 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:06:57 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:06:57 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:06:57 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:06:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:06:57 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:06:57 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:06:57 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:06:57 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:06:57 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:06:57 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:06:57 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:06:57 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:06:57 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:06:57 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:06:57 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:06:57 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:06:57 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:06:57 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:06:57 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:06:57 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:06:57 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:06:57 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:06:57 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:06:57 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:06:57 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:06:57 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:06:57 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:06:57 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:06:57 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:06:57 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:06:57 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:06:57 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:06:57 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:06:57 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:06:57 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:06:57 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:06:57 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:06:57 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:06:57 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:06:57 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:06:57 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:06:57 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:06:57 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:06:57 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:06:57 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2e23c180, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@499683c4, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@25da615a, java.class.version=55.0}
2019-08-22 13:06:57 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:06:57 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:06:57 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55ea2d70] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@670ce331]
2019-08-22 13:06:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:06:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:06:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:06:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:06:57 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:06:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514de325]
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:06:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:06:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:06:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:06:57 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:06:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b6b3572]
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:06:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:06:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:06:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:06:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:06:57 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:06:57 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:06:57 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:06:57 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:06:57 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:06:57 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:06:57 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:06:57 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:06:57 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:06:57 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:06:57 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5562c2c9
2019-08-22 13:06:57 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: acf2bb58-c558-4e3f-b58b-b4d904454fff (<unnamed>)
2019-08-22 13:06:57 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:06:57 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:06:57 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@10272bbb
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:06:57 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:06:57 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 13:06:57 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:06:57 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 2
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 13:06:57 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:57 INFO  App:25 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:57 INFO  App:25 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:06:57 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:06:57 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:06:57 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:06:57 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:06:57 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 13:06:57 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:06:57 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@d3957fe}

2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:06:57 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:57 INFO  App:33 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:06:57 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:06:57 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:06:57 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@d3957fe
2019-08-22 13:06:57 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:06:57 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 13:06:57 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:06:57 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@d3957fe}

2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:06:57 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:57 INFO  App:41 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:06:57 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:06:57 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:06:57 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@7103cb56
2019-08-22 13:06:57 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:06:57 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:06:57 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:06:57 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:06:57 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@7103cb56}

2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:06:57 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:06:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:06:57 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:06:57 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:06:57 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:06:57 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:06:57 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:09:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:09:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:09:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:09:21 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:09:21 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:09:21 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:09:21 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:09:21 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:09:21 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:09:21 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:09:21 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40844aab
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@301ec38b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a194c39
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2072acb2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45815ffc
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b2c4efb
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ec2cc4
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54a67a45
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f7b97da
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@395b56bb
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@485e36bc
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@17cdf2d0
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54d18072
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56c698e3
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bb6ab3a
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@14d14731
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae67cad
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6e28bc
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c098bb3
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31e4bb20
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18cebaa5
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@463b4ac8
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@765f05af
2019-08-22 13:09:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f68dff
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:09:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:09:22 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:09:22 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:09:22 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:09:22 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:09:22 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:09:22 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:09:22 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:09:22 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b32cd16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bdcaf36]
2019-08-22 13:09:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:09:22 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:09:22 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:09:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:09:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:09:22 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:09:22 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:09:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:09:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:09:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:09:22 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:09:22 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:09:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:09:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:09:22 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:09:22 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:09:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:09:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:09:22 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:09:22 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:09:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:09:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:09:22 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:09:22 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:09:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:09:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:09:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:09:22 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:09:22 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:09:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:09:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:09:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:09:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:09:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:09:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:09:22 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:09:22 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:09:22 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:09:22 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:09:22 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:09:22 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:09:22 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:09:22 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:09:22 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:09:22 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:09:22 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:09:22 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:09:22 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:09:22 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:09:22 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:09:22 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:09:22 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:09:22 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:09:22 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:09:22 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:09:22 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:09:22 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:09:22 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:09:22 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:09:22 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:09:22 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:09:22 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:09:22 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:09:22 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:09:22 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:09:22 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:09:22 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:09:22 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:09:22 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:09:22 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:09:22 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:09:22 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:09:22 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:09:22 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:09:22 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:09:22 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:09:22 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@47b179d7, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@39008c9f, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@162b3d47, java.class.version=55.0}
2019-08-22 13:09:22 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:09:22 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:09:22 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b32cd16] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ae0b770]
2019-08-22 13:09:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:09:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:09:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:09:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:09:22 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:09:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376c7d7d]
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:09:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:09:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:09:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:09:22 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:09:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ce792e]
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:09:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:09:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:09:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:09:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:09:22 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:09:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:09:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:09:22 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:09:22 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:09:22 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:09:22 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:09:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:09:22 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:09:22 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:09:22 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@44be69aa
2019-08-22 13:09:22 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 050f95e5-6807-48f5-951e-05e1310c690e (<unnamed>)
2019-08-22 13:09:22 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:09:22 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:09:22 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4fa4f485
2019-08-22 13:09:22 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 13:09:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:22 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 13:09:22 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:09:22 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 13:09:22 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:09:22 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 13:09:22 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:09:22 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:09:22 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:09:22 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 13:09:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:22 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 13:09:22 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:09:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:22 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 2
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 13:09:23 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:23 INFO  App:25 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:23 INFO  App:25 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:09:23 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:09:23 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:09:23 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:09:23 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:09:23 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 13:09:23 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:09:23 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@2b0f373b}

2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:09:23 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:23 INFO  App:33 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:09:23 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:09:23 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:09:23 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:09:23 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:09:23 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 13:09:23 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:09:23 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@2b0f373b}

2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:09:23 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:23 INFO  App:41 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:09:23 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:09:23 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:09:23 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:09:23 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:09:23 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:09:23 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:09:23 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:09:23 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@1338fb5}

2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:09:23 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:09:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:09:23 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:09:23 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:09:23 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:09:23 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:09:23 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:23 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:16:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:16:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:16:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:16:23 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:16:23 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:16:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:16:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:16:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:16:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:16:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:16:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40844aab
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@301ec38b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a194c39
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2072acb2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45815ffc
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b2c4efb
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ec2cc4
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54a67a45
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f7b97da
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@395b56bb
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@485e36bc
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@17cdf2d0
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54d18072
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56c698e3
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bb6ab3a
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@14d14731
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae67cad
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6e28bc
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c098bb3
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31e4bb20
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18cebaa5
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@463b4ac8
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@765f05af
2019-08-22 13:16:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f68dff
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:16:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:16:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:16:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:16:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:16:24 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:16:24 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:16:24 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:16:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:16:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d9fc57a]
2019-08-22 13:16:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:16:24 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:16:24 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:16:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:16:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:16:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:16:24 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:16:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:16:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:16:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:16:24 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:16:24 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:16:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:16:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:16:24 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:16:24 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:16:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:16:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:16:24 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:16:24 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:16:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:16:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:16:24 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:16:24 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:16:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:16:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:16:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:16:24 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:16:24 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:16:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:16:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:16:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:16:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:16:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:16:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:16:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:16:24 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:16:24 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:16:24 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:16:24 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:16:24 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:16:24 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:16:24 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:16:24 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:16:24 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:16:24 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:16:24 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:16:24 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:16:24 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:16:24 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:16:24 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:16:24 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:16:24 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:16:24 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:16:24 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:16:24 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:16:24 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:16:24 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:16:24 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:16:24 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:16:24 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:16:24 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:16:24 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:16:24 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:16:24 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:16:24 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:16:24 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:16:24 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:16:24 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:16:24 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:16:24 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:16:24 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:16:24 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:16:24 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:16:24 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:16:24 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:16:24 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7f9ab969, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@12f8b1d8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@746cd757, java.class.version=55.0}
2019-08-22 13:16:24 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:16:24 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:16:24 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae7950d]
2019-08-22 13:16:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:16:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:16:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:16:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:16:24 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:16:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f951a7f]
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:16:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:16:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:16:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:16:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:16:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9596ce8]
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:16:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:16:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:16:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:16:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:16:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:16:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:16:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:16:24 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:16:24 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:16:24 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:16:24 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:16:24 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:16:24 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:16:24 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:16:24 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c8f6a90
2019-08-22 13:16:24 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cb4786c8-ccfc-4b3c-9048-36fa25f807ef (<unnamed>)
2019-08-22 13:16:24 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:16:24 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:16:24 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1d61a348
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Event'

2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:16:24 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (<no alias>) -> event0_
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:16:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) )
2019-08-22 13:16:24 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:16:24 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}

2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 2
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#3]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#3]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#3]
2019-08-22 13:16:24 INFO  App:25 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:24 INFO  App:25 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:24 INFO  App:25 - Event [id=3, eveName=abcd, eveType=movie, city=bangalore, price=500, tickets=100]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyType'

2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:16:24 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:16:24 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:16:24 DEBUG DotNode:689 - getDataType() : eveType -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:16:24 DEBUG FromReferenceNode:60 - Resolved : E.eveType -> event0_.eveType
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:16:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.eveType event0_.id eveType ) ? ) ) )
2019-08-22 13:16:24 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:16:24 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.eveType' {propertyName=eveType,dereferenceType=PRIMITIVE,getPropertyPath=eveType,path=E.eveType,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveType' {originalText=eveType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyType, expectedType=org.hibernate.type.StringType@2b0f373b}

2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.eveType=:dummyType
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.eveType=?
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:16:24 INFO  App:33 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:24 INFO  App:33 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'city'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyCity'

2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:16:24 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:16:24 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:16:24 DEBUG DotNode:689 - getDataType() : city -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:16:24 DEBUG FromReferenceNode:60 - Resolved : E.city -> event0_.city
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:16:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.city event0_.id city ) ? ) ) )
2019-08-22 13:16:24 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:16:24 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.city' {propertyName=city,dereferenceType=PRIMITIVE,getPropertyPath=city,path=E.city,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyCity, expectedType=org.hibernate.type.StringType@2b0f373b}

2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.city=:dummyCity
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.city=?
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 1
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#2]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#2]
2019-08-22 13:16:24 INFO  App:41 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:24 INFO  App:41 - Event [id=2, eveName=football, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:16:24 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:16:24 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:16:24 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:16:24 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:16:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:16:24 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:16:24 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:16:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@1338fb5}

2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:16:24 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:16:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:16:24 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:16:24 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:16:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:16:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:16:24 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:24:59 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:24:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:24:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:24:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:24:59 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:24:59 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:24:59 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:24:59 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:24:59 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:24:59 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:24:59 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:24:59 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@635572a7
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@635572a7
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@635572a7
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a1a3478
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@eda25e5
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@66565121
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6fe1b4fb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6fe1b4fb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fe1b4fb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@74c79fa2
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@74c79fa2
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74c79fa2
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3ed242a4
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3ed242a4
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ed242a4
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@13f95696
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@13f95696
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13f95696
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ebaa6cb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ebaa6cb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ebaa6cb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@66fdec9
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@66fdec9
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66fdec9
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@576f63f6
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@576f63f6
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@576f63f6
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6e35bc3d
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6e35bc3d
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b73be9f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b73be9f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@56f0cc85
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@56f0cc85
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1477089c
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75cd8043
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@305a0c5f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@305a0c5f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@74960bfa
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74960bfa
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@1817f1eb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1817f1eb
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a194c39
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a194c39
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@c4ed84
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@c4ed84
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59252cb6
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59252cb6
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d730606
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d730606
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b3e12b5
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b3e12b5
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@fade1fc
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@fade1fc
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@72c28d64
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@72c28d64
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@3700ec9c
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3700ec9c
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@47f4e407
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47f4e407
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47f4e407
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ff65192
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4b45dcb8
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4b45dcb8
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4b45dcb8
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@70a36a66
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@64ba3208
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@64ba3208
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@1d131e1b
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d131e1b
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@19648c40
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19648c40
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@6f152006
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f152006
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b2a01d4
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b2a01d4
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34f7234e
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@44040454
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@44040454
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@44040454
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b53bcc2
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b53bcc2
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b53bcc2
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7a560583
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@3d97a632
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@fcb4004
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@fcb4004
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@fcb4004
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7966baa7
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7966baa7
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7966baa7
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@61c9c3fd
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@302a07d
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4218500f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4218500f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c2db68f
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4097cac
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4097cac
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@3d9f6567
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3d9f6567
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73173f63
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3401a114
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@319bc845
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@23d1e5d0
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23d1e5d0
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3fb6cf60
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37ddb69a
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@349c1daf
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dfddc9a
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b9df8a
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e8ac0e1
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@aafcffa
2019-08-22 13:24:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6955cb39
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:24:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:24:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:24:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:24:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:24:59 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:24:59 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:24:59 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:25:00 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:25:00 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e392345] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12f3afb5]
2019-08-22 13:25:00 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:25:00 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:25:00 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:25:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:25:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:25:00 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:25:00 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:25:00 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:25:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:25:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:25:00 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:25:00 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:25:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:25:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:25:00 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:25:00 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:25:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:25:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:25:00 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:25:00 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:25:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:25:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:25:00 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:25:00 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:25:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:25:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:25:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:25:00 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:25:00 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:25:00 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:25:00 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:25:00 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:25:00 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:25:00 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:25:00 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:25:00 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:25:00 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:25:00 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:25:00 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:25:00 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:25:00 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:25:00 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:25:00 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:25:00 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:25:00 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:25:00 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:25:00 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:25:00 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:25:00 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:25:00 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:25:00 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:25:00 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:25:00 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:25:00 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:25:00 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:25:00 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:25:00 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:25:00 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:25:00 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:25:00 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:25:00 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:25:00 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:25:00 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:25:00 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:25:00 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:25:00 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:25:00 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:25:00 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:25:00 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:25:00 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:25:00 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:25:00 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:25:00 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:25:00 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:25:00 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:25:00 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:25:00 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@79ab34c1, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1698d7c0, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@281f23f2, java.class.version=55.0}
2019-08-22 13:25:00 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:25:00 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:25:00 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e392345] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26ae880a]
2019-08-22 13:25:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:25:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:25:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:25:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:25:00 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:25:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c251f90]
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:25:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:25:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:25:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:25:00 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:25:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75483843]
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:25:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:25:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:25:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:25:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:25:00 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:25:00 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:25:00 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:25:00 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:25:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:25:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:25:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:25:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:25:00 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:25:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:25:00 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bc378f7
2019-08-22 13:25:00 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9b3796a9-fa8b-462f-a66e-12ec28bbd5a7 (<unnamed>)
2019-08-22 13:25:00 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:25:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:25:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4bd5849e
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:25:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:25:00 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:25:00 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:25:00 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@13f95696
2019-08-22 13:25:00 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:25:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:25:00 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:25:00 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:25:00 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:25:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@13f95696}

2019-08-22 13:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:25:00 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:25:00 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:25:00 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:25:00 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:25:00 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:25:00 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:25:00 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 13:25:00 DEBUG TransactionImpl:84 - begin
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: UPDATE com.example.model.Event E SET E.eveName=:newname WHERE E.eveName=:oldname
2019-08-22 13:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'example'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Event'
    |     \-[ALIAS] Node: 'E'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'E'
    |     |  \-[IDENT] Node: 'eveName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newname'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'oldname'

2019-08-22 13:25:00 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2019-08-22 13:25:00 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:25:00 DEBUG FromReferenceNode:60 - Resolved : E -> id
2019-08-22 13:25:00 DEBUG DotNode:689 - getDataType() : eveName -> org.hibernate.type.StringType@56f0cc85
2019-08-22 13:25:00 DEBUG FromReferenceNode:60 - Resolved : E.eveName -> eveName
2019-08-22 13:25:00 DEBUG FromReferenceNode:60 - Resolved : E -> id
2019-08-22 13:25:00 DEBUG DotNode:689 - getDataType() : eveName -> org.hibernate.type.StringType@56f0cc85
2019-08-22 13:25:00 DEBUG FromReferenceNode:60 - Resolved : E.eveName -> eveName
2019-08-22 13:25:00 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2019-08-22 13:25:00 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2019-08-22 13:25:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (Event)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'eveName' {propertyName=eveName,dereferenceType=PRIMITIVE,getPropertyPath=eveName,path=E.eveName,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
    |     |  +-[ALIAS_REF] IdentNode: 'id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
    |     |  \-[IDENT] IdentNode: 'eveName' {originalText=eveName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newname, expectedType=org.hibernate.type.StringType@56f0cc85}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'eveName' {propertyName=eveName,dereferenceType=PRIMITIVE,getPropertyPath=eveName,path=E.eveName,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveName' {originalText=eveName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=oldname, expectedType=org.hibernate.type.StringType@56f0cc85}

2019-08-22 13:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:25:00 DEBUG TransactionImpl:101 - committing
2019-08-22 13:34:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:34:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:34:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:34:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:34:35 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:34:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:34:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:34:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:34:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:34:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:34:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:34:35 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40844aab
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@301ec38b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a194c39
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2072acb2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45815ffc
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b2c4efb
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ec2cc4
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54a67a45
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f7b97da
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@395b56bb
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@485e36bc
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@17cdf2d0
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54d18072
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56c698e3
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bb6ab3a
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@14d14731
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae67cad
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6e28bc
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c098bb3
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31e4bb20
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18cebaa5
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@463b4ac8
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@765f05af
2019-08-22 13:34:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f68dff
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:34:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:34:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:34:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:34:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:34:35 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:34:35 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:34:35 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:34:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:34:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d9fc57a]
2019-08-22 13:34:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:34:35 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:34:35 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:34:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:34:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:34:35 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:34:35 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:34:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:34:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:34:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:34:35 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:34:35 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:34:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:34:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:34:35 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:34:35 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:34:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:34:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:34:35 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:34:35 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:34:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:34:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:34:35 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:34:35 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:34:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:34:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:34:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:34:35 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:34:35 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:34:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:34:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:34:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:34:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:34:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:34:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:34:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:34:35 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:34:35 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:34:35 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:34:35 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:34:35 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:34:35 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:34:35 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:34:35 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:34:35 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:34:35 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:34:35 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:34:35 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:34:35 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:34:35 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:34:35 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:34:35 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:34:35 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:34:35 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:34:35 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:34:35 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:34:35 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:34:35 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:34:35 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:34:35 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:34:35 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:34:35 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:34:35 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:34:35 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:34:35 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:34:35 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:34:35 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:34:35 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:34:35 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:34:35 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:34:35 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:34:35 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:34:35 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:34:35 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:34:35 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:34:35 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:34:35 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7f9ab969, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@12f8b1d8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@746cd757, java.class.version=55.0}
2019-08-22 13:34:35 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:34:35 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:34:35 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae7950d]
2019-08-22 13:34:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:34:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:34:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:34:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:34:35 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:34:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f951a7f]
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:34:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:34:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:34:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:34:35 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:34:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9596ce8]
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:34:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:34:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:34:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:34:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:34:35 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:34:35 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:34:35 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:34:36 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:34:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:34:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:34:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:34:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:34:36 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:34:36 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:34:36 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c8f6a90
2019-08-22 13:34:36 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: bccd9588-f207-4695-a4ca-0a4234c288dd (<unnamed>)
2019-08-22 13:34:36 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:34:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:34:36 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2291de
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:34:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:34:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:34:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:34:36 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:34:36 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:34:36 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:34:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:34:36 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:34:36 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:34:36 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:34:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@1338fb5}

2019-08-22 13:34:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:34:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:34:36 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:34:36 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:34:36 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:34:36 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:34:36 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:34:36 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:34:36 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 13:34:36 DEBUG TransactionImpl:84 - begin
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:288 - parse() - HQL: UPDATE com.example.model.Event E SET E.eveName=:newname WHERE E.eveName=:oldname
2019-08-22 13:34:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'example'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Event'
    |     \-[ALIAS] Node: 'E'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'E'
    |     |  \-[IDENT] Node: 'eveName'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newname'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'oldname'

2019-08-22 13:34:36 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2019-08-22 13:34:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:34:36 DEBUG FromReferenceNode:60 - Resolved : E -> id
2019-08-22 13:34:36 DEBUG DotNode:689 - getDataType() : eveName -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:34:36 DEBUG FromReferenceNode:60 - Resolved : E.eveName -> eveName
2019-08-22 13:34:36 DEBUG FromReferenceNode:60 - Resolved : E -> id
2019-08-22 13:34:36 DEBUG DotNode:689 - getDataType() : eveName -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:34:36 DEBUG FromReferenceNode:60 - Resolved : E.eveName -> eveName
2019-08-22 13:34:36 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2019-08-22 13:34:36 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2019-08-22 13:34:36 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (Event)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'eveName' {propertyName=eveName,dereferenceType=PRIMITIVE,getPropertyPath=eveName,path=E.eveName,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
    |     |  +-[ALIAS_REF] IdentNode: 'id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
    |     |  \-[IDENT] IdentNode: 'eveName' {originalText=eveName}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newname, expectedType=org.hibernate.type.StringType@2b0f373b}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'eveName' {propertyName=eveName,dereferenceType=PRIMITIVE,getPropertyPath=eveName,path=E.eveName,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveName' {originalText=eveName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=oldname, expectedType=org.hibernate.type.StringType@2b0f373b}

2019-08-22 13:34:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:34:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:34:36 DEBUG SQL:94 - update Event set eveName=? where eveName=?
2019-08-22 13:34:36 DEBUG TransactionImpl:101 - committing
2019-08-22 13:35:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:35:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:35:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:35:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:35:40 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:35:40 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:35:40 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:35:40 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:35:40 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:35:40 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:35:40 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:35:40 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40844aab
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@301ec38b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a194c39
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2072acb2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45815ffc
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b2c4efb
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ec2cc4
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54a67a45
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f7b97da
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@395b56bb
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@485e36bc
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@17cdf2d0
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54d18072
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56c698e3
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bb6ab3a
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@14d14731
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae67cad
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6e28bc
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c098bb3
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31e4bb20
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18cebaa5
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@463b4ac8
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@765f05af
2019-08-22 13:35:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f68dff
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:35:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:35:40 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:35:40 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:35:40 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:35:40 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:35:40 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:35:40 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:35:40 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:35:40 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d9fc57a]
2019-08-22 13:35:40 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:35:40 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:35:40 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:35:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:35:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:35:40 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:35:40 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:35:40 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:35:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:35:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:35:40 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:35:40 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:35:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:35:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:35:40 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:35:40 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:35:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:35:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:35:40 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:35:40 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:35:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:35:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:35:40 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:35:40 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:35:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:35:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:35:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:35:40 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:35:40 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:35:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:35:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:35:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:35:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:35:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:35:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:35:40 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:35:40 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:35:40 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:35:40 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:35:40 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:35:40 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:35:40 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:35:40 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:35:40 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:35:40 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:35:40 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:35:40 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:35:40 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:35:40 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:35:40 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:35:40 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:35:40 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:35:40 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:35:40 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:35:40 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:35:40 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:35:40 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:35:40 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:35:40 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:35:40 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:35:40 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:35:40 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:35:40 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:35:40 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:35:40 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:35:40 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:35:40 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:35:40 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:35:40 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:35:40 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:35:40 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:35:40 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:35:40 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:35:40 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:35:40 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:35:40 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:35:40 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7f9ab969, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@12f8b1d8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@746cd757, java.class.version=55.0}
2019-08-22 13:35:40 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:35:40 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:35:40 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae7950d]
2019-08-22 13:35:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:35:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:35:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:35:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:35:40 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:35:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f951a7f]
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:35:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:35:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:35:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:35:40 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:35:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9596ce8]
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:35:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:35:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:35:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:35:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:35:40 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:35:40 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:35:40 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:35:40 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:35:40 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:35:40 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:35:40 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:35:40 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:35:40 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:35:40 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:35:40 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c8f6a90
2019-08-22 13:35:40 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6e8ef331-13fd-417f-b9c8-db8cc9596d03 (<unnamed>)
2019-08-22 13:35:40 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:35:40 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:35:40 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2291de
2019-08-22 13:35:40 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:35:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:35:40 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:35:40 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:35:40 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:35:40 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:35:40 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:35:40 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:35:40 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:35:40 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:35:40 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:35:41 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:35:41 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:35:41 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@1338fb5}

2019-08-22 13:35:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:35:41 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:35:41 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:35:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:35:41 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:35:41 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:35:41 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:35:41 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:35:41 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:35:41 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:35:41 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 13:35:41 DEBUG TransactionImpl:84 - begin
2019-08-22 13:35:41 DEBUG QueryTranslatorImpl:288 - parse() - HQL: DELETE FROM EVENT E WHERE E.eveName=:dumname
2019-08-22 13:35:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:35:41 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[IDENT] Node: 'EVENT'
    |     \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dumname'

2019-08-22 13:35:41 DEBUG HqlSqlBaseWalker:124 - delete << begin [level=1, statement=delete]
2019-08-22 13:35:41 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:314 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:381)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:728)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:104)
	at com.example.model.EventDaoImpl.deleteEvent(EventDaoImpl.java:133)
	at com.example.hibernate.exercise.hibexercise.App.main(App.java:53)
2019-08-22 13:37:07 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:37:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:37:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:37:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:37:07 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:37:07 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:37:07 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:37:07 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:37:07 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:37:07 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:37:07 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:37:07 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@e54303
2019-08-22 13:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@e54303
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e54303
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@517566b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f0e9815
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@16c63f5
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@28ec166e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@28ec166e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@28ec166e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2826f61
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2826f61
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2826f61
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3da05287
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3da05287
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3da05287
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@75f95314
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@75f95314
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75f95314
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4dd02341
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4dd02341
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4dd02341
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1852a3ff
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1852a3ff
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1852a3ff
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@eda25e5
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@eda25e5
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@eda25e5
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179e425
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179e425
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c32386d
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c32386d
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@53bd8fca
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@53bd8fca
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@63a270c9
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@614df0a4
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@68be8808
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@68be8808
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@49d3c823
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49d3c823
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5d8bafa9
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d8bafa9
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@55dfebeb
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@55dfebeb
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d3ac898
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d3ac898
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6ad59d92
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6ad59d92
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63dd899
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63dd899
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@34cdeda2
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@34cdeda2
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4b41e4dd
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4b41e4dd
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@6d23017e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6d23017e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@c5dc4a2
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c5dc4a2
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c4ed84
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c4ed84
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c4ed84
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@112f364d
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@626c44e7
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@626c44e7
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@626c44e7
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3016fd5e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@42463763
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42463763
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@613a8ee1
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@613a8ee1
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2807bdeb
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2807bdeb
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@294e5088
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@294e5088
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24d09c1
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24d09c1
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d1dee39
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@674bd420
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@674bd420
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@674bd420
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@35a9782c
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@35a9782c
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@35a9782c
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@23fb172e
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e1fa5b1
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@4fce136b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4fce136b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@4fce136b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3300f4fd
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3300f4fd
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3300f4fd
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6f152006
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@3a6f2de3
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4983159f
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4983159f
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d2bd371
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@a43ce46
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a43ce46
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@616fe72b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@616fe72b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60957c0f
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@56e8b606
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3b0c9195
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@61ce23ac
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61ce23ac
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ccb4b1b
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4097cac
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ec2cc4
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a5b3fee
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c1e2a2d
2019-08-22 13:37:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@333dd51e
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:37:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:37:08 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:37:08 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:37:08 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:37:08 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:37:08 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:37:08 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:37:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:37:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d0566ba] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@733037]
2019-08-22 13:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:37:08 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:37:08 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:37:08 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:37:08 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:37:08 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:37:08 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:37:08 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:37:08 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:37:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:37:08 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:37:08 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:37:08 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:37:08 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:37:08 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:37:08 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:37:08 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:37:08 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:37:08 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:37:08 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:37:08 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:37:08 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:37:08 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:37:08 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:37:08 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:37:08 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:37:08 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:37:08 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:37:08 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:37:08 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:37:08 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:37:08 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:37:08 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:37:08 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:37:08 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:37:08 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:37:08 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:37:08 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:37:08 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:37:08 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:37:08 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:37:08 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:37:08 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:37:08 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:37:08 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:37:08 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:37:08 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:37:08 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:37:08 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:37:08 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:37:08 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6f667ad1, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@566d0c69, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@388b401d, java.class.version=55.0}
2019-08-22 13:37:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:37:08 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:37:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d0566ba] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@69c93ca4]
2019-08-22 13:37:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:37:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:37:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:37:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:37:08 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:37:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ec6a9f]
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:37:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:37:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:37:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:37:08 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304d0259]
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:37:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:37:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:37:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:37:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:37:08 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:08 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:37:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:37:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:37:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:37:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:37:08 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:37:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:37:08 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f911326
2019-08-22 13:37:08 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 7ec2253d-6dd6-4230-ab21-1713a953e931 (<unnamed>)
2019-08-22 13:37:08 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:37:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:37:08 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3337d04c
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:37:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:37:08 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:37:08 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:37:08 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:37:08 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@75f95314
2019-08-22 13:37:08 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:37:08 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:37:08 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:37:08 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:37:08 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:37:08 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@75f95314}

2019-08-22 13:37:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:08 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:08 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:37:08 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:37:08 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:37:08 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:37:08 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:37:08 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 13:37:08 DEBUG TransactionImpl:84 - begin
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:288 - parse() - HQL: DELETE FROM EVENT E WHERE E.eveName=:dumname
2019-08-22 13:37:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:08 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[IDENT] Node: 'EVENT'
    |     \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dumname'

2019-08-22 13:37:08 DEBUG HqlSqlBaseWalker:124 - delete << begin [level=1, statement=delete]
2019-08-22 13:37:08 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:314 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:381)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:728)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:104)
	at com.example.model.EventDaoImpl.deleteEvent(EventDaoImpl.java:133)
	at com.example.hibernate.exercise.hibexercise.App.main(App.java:53)
2019-08-22 13:37:49 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:37:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:37:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:37:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:37:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:37:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:37:49 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:37:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:37:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:37:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:37:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:37:49 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40844aab
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@301ec38b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a194c39
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2072acb2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45815ffc
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b2c4efb
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ec2cc4
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54a67a45
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f7b97da
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@395b56bb
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@485e36bc
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@17cdf2d0
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54d18072
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56c698e3
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bb6ab3a
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@14d14731
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae67cad
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6e28bc
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c098bb3
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31e4bb20
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18cebaa5
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@463b4ac8
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@765f05af
2019-08-22 13:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f68dff
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:37:49 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:37:49 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:37:49 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:37:49 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:37:49 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:37:49 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:37:49 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:37:49 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d9fc57a]
2019-08-22 13:37:49 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:37:49 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:37:49 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:37:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:37:49 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:37:49 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:37:49 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:37:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:37:49 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:37:49 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:37:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:37:49 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:37:49 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:37:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:37:49 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:37:49 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:37:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:37:49 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:37:49 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:37:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:37:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:37:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:37:49 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:37:49 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:37:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:37:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:37:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:37:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:37:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:37:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:37:49 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:37:49 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:37:49 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:37:49 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:37:49 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:37:49 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:37:49 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:37:49 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:37:49 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:37:49 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:37:49 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:37:49 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:37:49 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:37:49 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:37:49 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:37:49 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:37:49 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:37:49 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:37:49 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:37:49 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:37:49 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:37:49 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:37:49 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:37:49 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:37:49 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:37:49 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:37:49 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:37:49 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:37:49 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:37:49 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:37:49 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:37:49 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:37:49 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:37:49 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:37:49 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:37:49 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:37:49 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:37:49 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:37:49 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:37:49 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:37:49 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:37:49 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7f9ab969, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@12f8b1d8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@746cd757, java.class.version=55.0}
2019-08-22 13:37:49 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:37:49 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:37:49 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1db0ec27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@ae7950d]
2019-08-22 13:37:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:37:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:37:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:37:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:37:49 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:37:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f951a7f]
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:37:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:37:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:37:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:37:49 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9596ce8]
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:37:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:37:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:37:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:37:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:37:49 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:49 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:49 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:49 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:37:50 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:37:50 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:37:50 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:37:50 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:37:50 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:37:50 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:37:50 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c8f6a90
2019-08-22 13:37:50 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 97665d11-b51e-471d-9460-2995a30cb463 (<unnamed>)
2019-08-22 13:37:50 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:37:50 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:37:50 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2291de
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:37:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:37:50 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:37:50 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:37:50 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:37:50 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:37:50 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:37:50 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:37:50 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:37:50 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:37:50 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:37:50 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@1338fb5}

2019-08-22 13:37:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:50 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:37:50 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:37:50 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:37:50 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:37:50 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:37:50 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:37:50 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 13:37:50 DEBUG TransactionImpl:84 - begin
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:288 - parse() - HQL: DELETE from EVENT E WHERE E.eveName=:dumname
2019-08-22 13:37:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:37:50 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[IDENT] Node: 'EVENT'
    |     \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dumname'

2019-08-22 13:37:50 DEBUG HqlSqlBaseWalker:124 - delete << begin [level=1, statement=delete]
2019-08-22 13:37:50 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:314 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:381)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:728)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:104)
	at com.example.model.EventDaoImpl.deleteEvent(EventDaoImpl.java:133)
	at com.example.hibernate.exercise.hibexercise.App.main(App.java:53)
2019-08-22 13:39:23 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2019-08-22 13:39:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2019-08-22 13:39:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2019-08-22 13:39:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2019-08-22 13:39:23 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2019-08-22 13:39:23 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2019-08-22 13:39:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2019-08-22 13:39:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2019-08-22 13:39:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2019-08-22 13:39:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2019-08-22 13:39:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2019-08-22 13:39:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b41e4dd
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40844aab
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@301ec38b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a194c39
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@189aa67a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31d0e481
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b00856b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41dd05a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18920cc
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2c532cd8
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d470d0
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fc258b1
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2072acb2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45815ffc
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@158a3b2e
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71cf1b07
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@70ab2d48
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49872d67
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@753432a2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44040454
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b53bcc2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a560583
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e7b159b
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7966baa7
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302a07d
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@708400f6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b2c4efb
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f2cfcc2
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ec2cc4
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710b18a6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55562aa9
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ecd267f
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c5474f5
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3569fc08
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54a67a45
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@23d1e5d0
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dfddc9a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f7b97da
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@395b56bb
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f05be7f
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52de51b6
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@485e36bc
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@17cdf2d0
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f390d63
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54d18072
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@85e6769
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b7838a9
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56c698e3
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bb6ab3a
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@14d14731
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43aaf813
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae67cad
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6e28bc
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c098bb3
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31e4bb20
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18cebaa5
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@463b4ac8
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@765f05af
2019-08-22 13:39:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f68dff
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2019-08-22 13:39:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2019-08-22 13:39:23 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
2019-08-22 13:39:23 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.13 (Revision: 66459e9d39c8fd09767992bc592acd2053279be6)
      major : 8
      minor : 0
2019-08-22 13:39:23 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2019-08-22 13:39:23 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-08-22 13:39:23 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2019-08-22 13:39:23 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2019-08-22 13:39:23 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2019-08-22 13:39:23 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66b72664] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a34b7b8]
2019-08-22 13:39:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.model.Event
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2019-08-22 13:39:23 DEBUG EntityBinder:430 - Import with entity name Event
2019-08-22 13:39:23 DEBUG EntityBinder:873 - Bind entity com.example.model.Event on table Event
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=id, insertable=true, updatable=true, unique=false}
2019-08-22 13:39:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2019-08-22 13:39:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:id]
2019-08-22 13:39:23 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2019-08-22 13:39:23 DEBUG PropertyBinder:266 - Building property id
2019-08-22 13:39:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=city, insertable=true, updatable=true, unique=false}
2019-08-22 13:39:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property city with lazy=false
2019-08-22 13:39:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:city]
2019-08-22 13:39:23 DEBUG SimpleValueBinder:411 - building SimpleValue for city
2019-08-22 13:39:23 DEBUG PropertyBinder:266 - Building property city
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveName, insertable=true, updatable=true, unique=false}
2019-08-22 13:39:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveName with lazy=false
2019-08-22 13:39:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveName]
2019-08-22 13:39:23 DEBUG SimpleValueBinder:411 - building SimpleValue for eveName
2019-08-22 13:39:23 DEBUG PropertyBinder:266 - Building property eveName
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=eveType, insertable=true, updatable=true, unique=false}
2019-08-22 13:39:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property eveType with lazy=false
2019-08-22 13:39:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:eveType]
2019-08-22 13:39:23 DEBUG SimpleValueBinder:411 - building SimpleValue for eveType
2019-08-22 13:39:23 DEBUG PropertyBinder:266 - Building property eveType
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=price, insertable=true, updatable=true, unique=false}
2019-08-22 13:39:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property price with lazy=false
2019-08-22 13:39:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:price]
2019-08-22 13:39:23 DEBUG SimpleValueBinder:411 - building SimpleValue for price
2019-08-22 13:39:23 DEBUG PropertyBinder:266 - Building property price
2019-08-22 13:39:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Event), mappingColumn=tickets, insertable=true, updatable=true, unique=false}
2019-08-22 13:39:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tickets with lazy=false
2019-08-22 13:39:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.model.Event:tickets]
2019-08-22 13:39:23 DEBUG SimpleValueBinder:411 - building SimpleValue for tickets
2019-08-22 13:39:23 DEBUG PropertyBinder:266 - Building property tickets
2019-08-22 13:39:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2019-08-22 13:39:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for city
2019-08-22 13:39:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveName
2019-08-22 13:39:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for eveType
2019-08-22 13:39:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for price
2019-08-22 13:39:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tickets
2019-08-22 13:39:23 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [event]
2019-08-22 13:39:23 DEBUG SessionFactoryImpl:196 - Building session factory
2019-08-22 13:39:23 DEBUG Settings:70 - SessionFactory name : null
2019-08-22 13:39:23 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2019-08-22 13:39:23 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2019-08-22 13:39:23 DEBUG Settings:74 - Statistics: disabled
2019-08-22 13:39:23 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2019-08-22 13:39:23 DEBUG Settings:77 - Default entity-mode: pojo
2019-08-22 13:39:23 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2019-08-22 13:39:23 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2019-08-22 13:39:23 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2019-08-22 13:39:23 DEBUG Settings:82 - Default batch fetch size: -1
2019-08-22 13:39:23 DEBUG Settings:83 - Maximum outer join fetch depth: 2
2019-08-22 13:39:23 DEBUG Settings:84 - Default null ordering: NONE
2019-08-22 13:39:23 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2019-08-22 13:39:23 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2019-08-22 13:39:23 DEBUG Settings:88 - multi-tenancy strategy : NONE
2019-08-22 13:39:23 DEBUG Settings:90 - JTA Track by Thread: enabled
2019-08-22 13:39:23 DEBUG Settings:92 - Query language substitutions: {}
2019-08-22 13:39:23 DEBUG Settings:93 - Named query checking : enabled
2019-08-22 13:39:23 DEBUG Settings:95 - Second-level cache: disabled
2019-08-22 13:39:23 DEBUG Settings:96 - Second-level query cache: disabled
2019-08-22 13:39:23 DEBUG Settings:97 - Second-level query cache factory: null
2019-08-22 13:39:23 DEBUG Settings:98 - Second-level cache region prefix: null
2019-08-22 13:39:23 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2019-08-22 13:39:23 DEBUG Settings:100 - Structured second-level cache entries: disabled
2019-08-22 13:39:23 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2019-08-22 13:39:23 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2019-08-22 13:39:23 DEBUG Settings:104 - JDBC batch size: 15
2019-08-22 13:39:23 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2019-08-22 13:39:23 DEBUG Settings:106 - Scrollable result sets: enabled
2019-08-22 13:39:23 DEBUG Settings:107 - Wrap result sets: disabled
2019-08-22 13:39:23 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2019-08-22 13:39:23 DEBUG Settings:109 - JDBC result set fetch size: null
2019-08-22 13:39:23 DEBUG Settings:110 - Connection release mode: ON_CLOSE
2019-08-22 13:39:23 DEBUG Settings:111 - Generate SQL with comments: disabled
2019-08-22 13:39:23 DEBUG Settings:113 - JPA compliance - query : 
2019-08-22 13:39:23 DEBUG Settings:114 - JPA compliance - closed-handling : 
2019-08-22 13:39:23 DEBUG Settings:115 - JPA compliance - lists : 
2019-08-22 13:39:23 DEBUG Settings:116 - JPA compliance - transactions : 
2019-08-22 13:39:23 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2019-08-22 13:39:23 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7a344b65, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/test4/Documents/workspace-spring-tool-suite/hibexercise/target/classes:/home/test4/.m2/repository/org/hibernate/hibernate-core/5.4.2.Final/hibernate-core-5.4.2.Final.jar:/home/test4/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/test4/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/test4/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/test4/.m2/repository/net/bytebuddy/byte-buddy/1.9.10/byte-buddy-1.9.10.jar:/home/test4/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/test4/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/test4/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/test4/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/test4/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/test4/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/test4/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/test4/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/test4/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/test4/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/test4/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/test4/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/test4/.m2/repository/org/springframework/spring-orm/5.1.5.RELEASE/spring-orm-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-beans/5.1.5.RELEASE/spring-beans-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jdbc/5.1.5.RELEASE/spring-jdbc-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-tx/5.1.5.RELEASE/spring-tx-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-core/5.1.9.RELEASE/spring-core-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-jcl/5.1.9.RELEASE/spring-jcl-5.1.9.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-context/5.1.5.RELEASE/spring-context-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-aop/5.1.5.RELEASE/spring-aop-5.1.5.RELEASE.jar:/home/test4/.m2/repository/org/springframework/spring-expression/5.1.5.RELEASE/spring-expression-5.1.5.RELEASE.jar:/home/test4/.m2/repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar:/home/test4/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/test4/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Asia/Kolkata, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.example.hibernate.exercise.hibexercise.App, jdk.debug=release, sun.cpu.endian=little, user.home=/home/test4, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=test4, path.separator=:, os.version=5.0.0-25-generic, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@1affbebc], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/test4/Documents/workspace-spring-tool-suite/hibexercise, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7b7b3edb, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6b474074, java.class.version=55.0}
2019-08-22 13:39:23 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2019-08-22 13:39:23 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2019-08-22 13:39:23 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66b72664] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@12f8b1d8]
2019-08-22 13:39:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:39:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:39:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.model.Event] is safe
2019-08-22 13:39:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.model.Event
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.model.Event
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:3796 -  Version select: select id from Event where id =?
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select event_.id, event_.city as city2_0_, event_.eveName as eveName3_0_, event_.eveType as eveType4_0_, event_.price as price5_0_, event_.tickets as tickets6_0_ from Event event_ where event_.id=?
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Event (city, eveName, eveType, price, tickets, id) values (?, ?, ?, ?, ?, ?)
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:394 -  Update 0: update Event set city=?, eveName=?, eveType=?, price=?, tickets=? where id=?
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Event where id=?
2019-08-22 13:39:24 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into Event (city, eveName, eveType, price, tickets) values (?, ?, ?, ?, ?)
2019-08-22 13:39:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@124ac145]
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:39:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:39:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:39:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:39:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [NONE]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:39:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d52ecd]
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : city
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveName
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : eveType
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : price
2019-08-22 13:39:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tickets
2019-08-22 13:39:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2019-08-22 13:39:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2019-08-22 13:39:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.model.Event)
    - Returns
       - EntityReturnImpl(entity=com.example.model.Event, querySpaceUid=<gen:0>, path=com.example.model.Event)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.model.Event)
          - SQL table alias mapping - event0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2019-08-22 13:39:24 DEBUG EntityLoader:137 - Static select for entity com.example.model.Event [READ]: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:39:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:39:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.model.Event: select event0_.id as id1_0_0_, event0_.city as city2_0_0_, event0_.eveName as eveName3_0_0_, event0_.eveType as eveType4_0_0_, event0_.price as price5_0_0_, event0_.tickets as tickets6_0_0_ from Event event0_ where event0_.id=?
2019-08-22 13:39:24 DEBUG Table:516 - No alter strings for table : Event
2019-08-22 13:39:24 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2019-08-22 13:39:24 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2019-08-22 13:39:24 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:39:24 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2019-08-22 13:39:24 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2019-08-22 13:39:24 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2019-08-22 13:39:24 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2da3b078
2019-08-22 13:39:24 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 97fb061f-d607-41a6-8486-cc2958b42f23 (<unnamed>)
2019-08-22 13:39:24 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2019-08-22 13:39:24 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2019-08-22 13:39:24 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4b4ee511
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:39:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Event'
    |        \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dummyId'

2019-08-22 13:39:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2019-08-22 13:39:24 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:39:24 DEBUG FromReferenceNode:60 - Resolved : E -> event0_.id
2019-08-22 13:39:24 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@1338fb5
2019-08-22 13:39:24 DEBUG FromReferenceNode:60 - Resolved : E.id -> event0_.id
2019-08-22 13:39:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2019-08-22 13:39:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} Event event0_ ) ( WHERE ( = ( event0_.id event0_.id id ) ? ) ) )
2019-08-22 13:39:24 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2019-08-22 13:39:24 DEBUG JoinProcessor:192 - Using FROM fragment [Event event0_]
2019-08-22 13:39:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Event)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'event0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}}
    |  \-[SQL_TOKEN] SqlFragment: 'event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event event0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'event0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=E.id,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'event0_.id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dummyId, expectedType=org.hibernate.type.IntegerType@1338fb5}

2019-08-22 13:39:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:254 - HQL: FROM com.example.model.Event E WHERE E.id=:dummyId
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:255 - SQL: select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:39:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:39:24 DEBUG SQL:94 - select event0_.id as id1_0_, event0_.city as city2_0_, event0_.eveName as eveName3_0_, event0_.eveType as eveType4_0_, event0_.price as price5_0_, event0_.tickets as tickets6_0_ from Event event0_ where event0_.id=?
2019-08-22 13:39:24 DEBUG Loader:384 - Result set row: 0
2019-08-22 13:39:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.model.Event#1]
2019-08-22 13:39:24 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.model.Event#1]
2019-08-22 13:39:24 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.model.Event#1]
2019-08-22 13:39:24 INFO  App:49 - Event [id=1, eveName=cricket, eveType=sports, city=kolkata, price=500, tickets=100]
2019-08-22 13:39:24 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2019-08-22 13:39:24 DEBUG TransactionImpl:84 - begin
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: DELETE from com.example.model.Event E WHERE E.eveName=:dumname
2019-08-22 13:39:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'example'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Event'
    |     \-[ALIAS] Node: 'E'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'E'
          |  \-[IDENT] Node: 'eveName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'dumname'

2019-08-22 13:39:24 DEBUG HqlSqlBaseWalker:124 - delete << begin [level=1, statement=delete]
2019-08-22 13:39:24 DEBUG FromElement:146 - FromClause{level=1} : com.example.model.Event (E) -> event0_
2019-08-22 13:39:24 DEBUG FromReferenceNode:60 - Resolved : E -> id
2019-08-22 13:39:24 DEBUG DotNode:689 - getDataType() : eveName -> org.hibernate.type.StringType@2b0f373b
2019-08-22 13:39:24 DEBUG FromReferenceNode:60 - Resolved : E.eveName -> eveName
2019-08-22 13:39:24 DEBUG HqlSqlBaseWalker:128 - delete : finishing up [level=1, statement=delete]
2019-08-22 13:39:24 DEBUG HqlSqlBaseWalker:132 - delete >> end [level=1, statement=delete]
2019-08-22 13:39:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (Event)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[E], fromElementByTableAlias=[event0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Event' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=E,role=null,tableName=Event,tableAlias=event0_,origin=null,columns={,className=com.example.model.Event}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'eveName' {propertyName=eveName,dereferenceType=PRIMITIVE,getPropertyPath=eveName,path=E.eveName,tableAlias=event0_,className=com.example.model.Event,classAlias=E}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=E, className=com.example.model.Event, tableAlias=event0_}
          |  \-[IDENT] IdentNode: 'eveName' {originalText=eveName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=dumname, expectedType=org.hibernate.type.StringType@2b0f373b}

2019-08-22 13:39:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:39:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2019-08-22 13:39:24 DEBUG SQL:94 - delete from Event where eveName=?
2019-08-22 13:39:24 DEBUG TransactionImpl:101 - committing
